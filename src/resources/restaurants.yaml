get:
  summary: List all restaurants
  operationId: getRestaurants
  description: "Retrieve all the information about all the restaurants"
  tags:
    - restaurants
  parameters:
    - name: "is_open"
      in: "query"
      description: "Filter restaurants by their open status (based on the current time)"
      required: true
      schema:
        type: "boolean"
        default: true
    - $ref: "../parameters/query/limit.yaml"
    - $ref: "../parameters/query/offset.yaml"
    - $ref: "../parameters/query/order.yaml"
    - $ref: "../parameters/query/sort.yaml"
    - $ref: "../parameters/query/field.yaml"
    - $ref: "../parameters/query/filter.yaml"
  responses:
    "200":
      description: A list of restaurants
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "../schemas/Restaurant.yaml"
              pagination:
                type: object
                properties:
                  endCursor:
                    type: string
                    example: ""
                  hasNextPage:
                    type: boolean
                    example: false
    "204":
      description: "The query was successful but no restaurants were found"
    "205":
      description: "Partial list of restaurants"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "../schemas/Restaurant.yaml"
              pagination:
                type: object
                properties:
                  endCursor:
                    type: string
                    example: "YXJyYXljb25uZWN0aW9uOjE="
                  hasNextPage:
                    type: boolean
                    example: true
    "304":
      $ref: "../responses/NotModified.yaml"
    "400":
      description: "Bad request"
      content:
        application/json:
          schema:
            $ref: "../schemas/Error.yaml"
          example:
            message: "Bad Request"
            code: 400
            details: "The request was malformed"
    "429":
      $ref: "../responses/TooManyRequest.yaml"
    default:
      $ref: "../responses/UnexpectedError.yaml"
post:
  summary: "Create a new restaurant"
  operationId: createRestaurant
  description: "Create a new restaurant. The restaurant will not be returned in the response"
  tags:
    - restaurants
  security:
    - bearerAuth: []
  requestBody:
    description: "Restaurant object"
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            name:
              type: string
              example: "Restaurant 1"
            address:
              type: string
              example: "1 rue de la paix, 75010 Paris"
            tag:
              description: A list of tag of the restaurant
              type: array
              items:
                type: string
              example: ["gastronomy", "french"]
            openingHours:
              description: The opening hours of the restaurant
              type: array
              items:
                description: "Format day:hour with 0 for monday and 0,23 for hours"
                type: string
              minItems: 0
              maxItems: 168
              example: ["1:11", "1:12", "1:13", "1:14"]
  responses:
    "201":
      description: "Restaurant was created"

    "400":
      description: "Bad request"
      content:
        application/json:
          schema:
            $ref: "../schemas/Error.yaml"
          example:
            message: "Bad Request"
            code: 400
            details: "The request was malformed, please check the request body reference and example. The request body should be a valid JSON"
    "401":
      $ref: "../responses/NotAuthorized.yaml"
    "403":
      $ref: "../responses/Forbidden.yaml"
    "429":
      $ref: "../responses/TooManyRequest.yaml"
    default:
      $ref: "../responses/UnexpectedError.yaml"
